package com.optimum.employeedashboard.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;


@Entity
@Table(name="test_details")
public class TestDetail {

	@GeneratedValue(strategy=GenerationType.AUTO)
	@Id
	@Column(name="settings_id")
	private int settingsId;
	// primary key
	// auto generated by DB table
	@Column(name="pool_id")
	private int poolId;
	// foregin key
	// taken from QuestionPool
	@Column(name="test_cat")
	private String testCat;
	// taken from QuestionPool
	@Column(name="test_type")
	private String testType;
	// taken from QuestionPool
	@Column(name="test_subtype")
	private String testSubtype;
	// taken from QuestionPool
	@Column(name="no_of_qns")
	private int noOfQns;
	@Column(name="time_limit")
	private int timeLimit;
	@Column(name="is_hidden")
	private Boolean isHidden;
	// used to check if test is "deleted" or not
	
	public int getSettingsId() {
		return settingsId;
	}
	public void setSettingsId(int settingsId) {
		this.settingsId = settingsId;
	}
	public int getPoolId() {
		return poolId;
	}
	public void setPoolId(int poolId) {
		this.poolId = poolId;
	}
	public String getTestCat() {
		return testCat;
	}
	public void setTestCat(String testCat) {
		this.testCat = testCat;
	}
	public String getTestType() {
		return testType;
	}
	public void setTestType(String testType) {
		this.testType = testType;
	}
	public String getTestSubtype() {
		return testSubtype;
	}
	public void setTestSubtype(String testSubtype) {
		this.testSubtype = testSubtype;
	}
	public int getNoOfQns() {
		return noOfQns;
	}
	public void setNoOfQns(int noOfQns) {
		this.noOfQns = noOfQns;
	}
	public int getTimeLimit() {
		return timeLimit;
	}
	public void setTimeLimit(int timeLimit) {
		this.timeLimit = timeLimit;
	}
	public Boolean getIsHidden() {
		return isHidden;
	}
	public void setIsHidden(Boolean isActive) {
		this.isHidden = isActive;
	}	
	
	
}
